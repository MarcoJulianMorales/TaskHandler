@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer localizer

@{
    ViewData["Title"] = "Tasks list";
}

<div class="text-center">
    <h1 class="display-4">@localizer["My tasks"]</h1>
    <button type="button" class="btn btn-primary mb-3" onclick="addNewTask()">
        @localizer["Add new task"]
    </button>
</div>

<div id="tasks-list-container" class="text-center">
    <div class="text-start" data-bind="foreach: tasks">
        <div name="task" class="border mb-2 p-2" style="cursor:pointer">
            <div data-bind="text: Title, hidden:isNew" class="fw-bold">

            </div>
            <input type="text" name="Title-task" autocomplete="off"
            data-bind="value:Title, visible: isNew, event:{focusout: focusoutTaskTitle}" />
        </div>
    </div>

    <div data-bind="visible:loading" class="spinner-border">
        <span class="visually-hidden">Loading...</span>
    </div>

    <div data-bind="visible:noTasks">
        No tasks to show
    </div>

</div>

@section Scripts {
    <script src="~/js/Tasks.js" asp-append-version="true"></script>

    <script>

        const urlTasks = '/api/Tasks';

        function TasksListDTOfn () {
            var self = this;
            self.tasks = ko.observableArray([]);
            self.loading = ko.observable(true);

            self.noTasks = ko.pureComputed(function(){
                if(self.loading()){
                    return false;
                }
                return self.tasks().length === 0;
            })
        }

        function TasksElementListDTO({id, title}){
            var self = this;
            self.id = ko.observable(id);
            self.Title = ko.observable(title);
            self.isNew = ko.pureComputed(function () {
                return self.id() == 0;
            })
        }

        const TasksListDTO = new TasksListDTOfn();

        getTasks();

        ko.applyBindings(TasksListDTO, document.getElementById("tasks-list-container"));
    </script>
}